apiVersion: apps/v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: capi
    name: capi
  spec:
    ports:
    - name: "{{ .Values.service.port }}"
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
    selector:
      service: capi
    type: LoadBalancer 
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: capi
    name: capi
  spec:
    selector:
      matchLabels:
        service: capi
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          service: capi
      spec:
        containers:
        - env:
          - name: spring.profiles.active
            value: {{ quote .Values.spring.profiles.active }}
          - name: capi.persistence.enabled
            value: {{quote .Values.capi.persistence.enabled }}
          - name: capi.db.discovery.timer.interval
            value: {{ quote .Values.capi.db.discovery.timer.interval }} 
          - name: spring.datasource.url
            value: {{ quote .Values.spring.datasource.url }}
          - name: spring.datasource.username
            value: {{ quote .Values.spring.datasource.username }}
          - name: spring.datasource.password
            value: {{ quote .Values.spring.datasource.password }}    
          - name: management.endpoint.camelroutes.enabled
            value: {{ quote .Values.management.endpoint.camelroutes.enabled }}
          - name: capi.consul.discovery.enabled
            value: {{ quote .Values.capi.consul.discovery.enabled }}
          - name: capi.consul.discovery.timer.interval
            value: {{ quote .Values.capi.consul.discovery.timer.interval }}
          - name: capi.consul.host
            value: {{ quote .Values.capi.consul.host }}
          ## Trust Store Configuration      
          - name: capi.trust.store.enabled
            value: {{ quote .Values.capi.trust.store.enabled }}
          - name: capi.trust.store.path
            value: {{ quote .Values.capi.trust.store.path }}
          - name: capi.trust.store.password
            value: {{ quote .Values.capi.trust.store.password }}
          - name: capi.manager.security.enabled
            value: {{ quote .Values.capi.manager.security.enabled }}
          - name: capi.manager.security.issuer
            value: {{ quote .Values.capi.manager.security.issuer }}
          ## SSL Configuration  
          - name: server.ssl.enabled
            value: {{ quote .Values.server.ssl.enabled }}
          - name: server.ssl.key-store-type
            value: {{ quote .Values.server.ssl.key.store.type }}
          - name: server.ssl.key-store
            value: {{ quote .Values.server.ssl.key.store.path }}
          - name: server.ssl.key-alias
            value: {{ quote .Values.server.ssl.key.store.alias }}
          - name: server.ssl.key-store-password
            value: {{ quote .Values.server.ssl.key.store.password }}              
          image: {{ .Values.image.repository }}
          name: capi
          ports:
          - containerPort: {{ .Values.service.port }}
          resources: {}
          volumeMounts:
          {{ if .Values.server.ssl.enabled }}
          - name: capi-certificate
            mountPath: /keys/capi.jks
            subPath: capi.jks
          {{ end }}
          {{ if .Values.capi.trust.store.enabled }}  
          - name: truststore
            mountPath: /keys/truststore.jks
            subPath: truststore.jks  
          {{ end }}  
        restartPolicy: Always
        volumes:
        {{ if .Values.server.ssl.enabled }}
        - name: capi-certificate
          configMap:
            name: capi-certificate
        {{ end }}
        {{ if .Values.capi.trust.store.enabled }}    
        - name: truststore
          configMap:
            name: truststore
        {{ end }}    
  status: {}
kind: List
metadata: {}

